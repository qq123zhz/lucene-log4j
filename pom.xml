<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.googlecode.lucene-log4j</groupId>
  <artifactId>lucene-log4j</artifactId>
  <name>Lucene appender for Log4j</name>
  <description>
  lucene-log4j solves a recurrent problem that production support team face whenever a live incident
  happens: filtering production log statements to match a session/transaction/user ID.
  </description>
  <version>1.1.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <url>https://lucene-log4j.googlecode.com</url>

  <scm>
    <connection>scm:svn:http://lucene-log4j.googlecode.com/svn/trunk/</connection>
    <developerConnection>scm:svn:https://lucene-log4j.googlecode.com/svn/trunk/</developerConnection>
    <url>https://lucene-log4j.googlecode.com/svn/trunk/</url>
  </scm>

  <issueManagement>
    <system>GoogleCode issues tracker</system>
    <url>http://code.google.com/p/lucene-log4j/issues/list</url>
  </issueManagement>

  <distributionManagement>
    <repository>
      <id>lucene-log4j-release</id>
      <name>Google Code Repository</name>
      <url>dav:https://lucene-log4j.googlecode.com/svn/maven2/releases</url>
    </repository>
    <snapshotRepository>
      <id>lucene-log4j-snapshot</id>
      <name>Google Code Repository</name>
      <url>dav:https://lucene-log4j.googlecode.com/svn/maven2/snapshots</url>
    </snapshotRepository>
  </distributionManagement>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>3.8.1</version>
      <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.3</version>
      </dependency>
      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>1.1</version>
      </dependency>
      <dependency>
        <groupId>lucene</groupId>
        <artifactId>lucene</artifactId>
        <version>1.4.3</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>2.3</version>
      <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>net.sourceforge.pjl-comp-filter</groupId>
        <artifactId>pjl-comp-filter</artifactId>
        <version>1.6.4</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.9</version>
      </dependency>
      <dependency>
        <groupId>easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>1.2_Java1.3</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <modules>
    <module>lucene-log4j-core</module>
    <module>lucene-log4j-sample-webapp</module>
    <module>lucene-log4j-checkstyle-checks</module>
  </modules>

  <build>
    <extensions>
      <!-- Extension to use webdav -->
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav</artifactId>
        <version>1.0-beta-2</version>
      </extension>
    </extensions>  

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.4</source>
          <target>1.4</target>
        </configuration>
      </plugin>

      <!-- Eclipse -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <downloadSources>true</downloadSources>
          <wtpversion>2.0</wtpversion>
          <additionalBuildcommands>
            <buildCommand>
              <name>org.maven.ide.eclipse.maven2Builder</name>
              <arguments>
              </arguments>
            </buildCommand>
            <buildCommand>
              <name>net.sf.eclipsecs.core.CheckstyleBuilder</name>
              <arguments>
              </arguments>
            </buildCommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>org.maven.ide.eclipse.maven2Nature</projectnature>
            <projectnature>net.sf.eclipsecs.core.CheckstyleNature</projectnature>
          </additionalProjectnatures>
          <classpathContainers>
            <classpathContainer>org.eclipse.jdt.launching.JRE_CONTAINER</classpathContainer>
          </classpathContainers>
        </configuration>
      </plugin>
   </plugins>
  </build>
  
  <reporting>
    <plugins>
      <!-- Javadoc -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>

      <!-- Unit tests report -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <!-- Cross-referenced HTML version of source code -->
      <plugin>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      
      <!-- Test coverage -->
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
      </plugin>
      
      <!-- Code analysis -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
      </plugin>
      
      <!-- Changelog -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>changelog-maven-plugin</artifactId>
      </plugin>
      
      <!-- Taglist (TODO list) -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </reporting>
</project>